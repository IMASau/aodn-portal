/**
 * Generated by the Shiro plugin. This filters class protects all URLs
 * via access control by convention.
 */
class SecSecurityFilters {
    def filters = {
        
        homeAccess(controller: "home", action: "*") {
            before = {
                //println String.format(">> SecSecurityFilters 'homeAccess' filter. controllerName = %s; actionName = %s.", controllerName, actionName)
                
                // Allow all access
                request.accessAllowed = true
            }
        }
               
        configAccess(controller: "config", action: "list") {
            before = {
                //println String.format(">> SecSecurityFilters 'configAccess' filter. controllerName = %s; actionName = %s.", controllerName, actionName)
                
                // Allow all access
                request.accessAllowed = true
            }
        }
        
        serverAccess(controller: "server", action: "list") {
            before = {
               //println String.format(">> SecSecurityFilters 'serverAccess' filter. controllerName = %s; actionName = %s.", controllerName, actionName)
                
                // Allow all access
                request.accessAllowed = true
            }
        }
        
        layerAccess(controller: "layer", action: "list|listBaseLayersAsJson|listNonBaseLayerAsJson|showLayerByItsId") {
            before = {
                //println String.format(">> SecSecurityFilters 'layerAccess' filter. controllerName = %s; actionName = %s.", controllerName, actionName)
                
                // Allow all access
                request.accessAllowed = true
            }
        }
        
        all(uri: "/**") {
            before = {
                //println String.format(">> SecSecurityFilters 'all' filter. controllerName = %s; actionName = %s.\n", controllerName, actionName)               
                                
                // Ignore direct views (e.g. the default main index page).
                if (!controllerName) return true
                if (request.accessAllowed) return true            
                
                // Access control by convention.
                accessControl(auth: false) // "auth: false" means it will accept remembered users as well as those who logged-in in this session
            }
        }
    }
}